# DO NOT ALTER CODE IN THIS CHUNK
# include=false tells RStudio to run the code, but print this section in the html output
library(tidyverse)
#Run this chunk to load the data.
maize_data <- read_csv("malaria-vs-maize.csv",
col_names = TRUE,
na = "NA",
col_types = list(villages = col_character(),
maize_yield = col_factor(c("Low",
"Medium",
"High")),
incidence_rates = col_integer()))
glimpse(maize_data, width = 75)
maize_data %>%
group_by(maize_yield) %>%
summarise(mean = mean(incidence_rates, na.rm = TRUE),
std_dev = sd(incidence_rates, na.rm = TRUE),
reps = sum(!is.na(incidence_rates)),
se = std_dev/sqrt(reps))
View(maize_data)
#Run this chunk to load the data.
sex_data <- read_csv("sex-vs-infection.csv",
col_names = TRUE,
na = "NA",
col_types = list(sex = col_factor(c("M",
"F")),
spores_mill = col_double(),
age = col_integer()))
glimpse(sex_data, width = 75)
# Use this chunk for Exercise 1
sex_data %>%
group_by(sex)%>%
arrange(age) %>%
summarise(lowest = first(age),
highest = last(age))
reduced_data <- sex_data %>%
filter(age <= "38")
sex_data %>%
group_by(sex, age) |>
summarise(n())
# Use this chunk for Exercise 2.
ggplot(reduced_data, aes(x = age, y = spores_mill, colour = sex)) +
geom_point() +
geom_smooth(method = "lm") + #Fits a linear model (a straight line)
scale_x_continuous(limits = c(18,38), breaks = seq(18,38, by = 2)) +
scale_y_continuous(limits = c(0,7), breaks = seq(0, 7, by = 1)) +
labs(x = "Age of Daphnia (days)",
y = "Spore production (millions per animal)",
colour = "Sex") + #Legend label must match the grouping aes
theme_bw()
ggplot(reduced_data, aes(x = age, y = spores_mill)) +
geom_point() + facet_grid(. ~ sex) +
geom_smooth(method = "lm") + #Fits a linear model (a straight line)
scale_x_continuous(limits = c(18,38), breaks = seq(18,38, by = 2)) +
scale_y_continuous(limits = c(0,7), breaks = seq(0, 7, by = 1)) +
labs(x = "Age of Daphnia (days)",
y = "Spore production (millions per animal)",
colour = "Sex") + #Legend label must match the grouping aes
theme_bw()
sex_data
sex_data %>%
group_by(sex) |>
summarise(sum = !is.na())
sex_data
sex_data %>%
group_by(sex) |>
summarise(sum = !is.na(spores_mill))
sex_data %>%
group_by(sex) |>
summarise(sum = sum(!is.na(spores_mill)))
# DO NOT ALTER CODE IN THIS CHUNK
# include=false tells RStudio to run the code, but not print this section in the html output
library(tidyverse)
