#call the ANOVA table
Anova(maths.mod, type = 2)
# Use this chunk to complete Exercise 12
#summary statistics
maths %>% #the data to use
group_by(degree) %>% #group data by colour
summarise(reps = sum(!is.na(mathsAdvantage)), #compute the sample size
mean = mean(mathsAdvantage, na.rm = TRUE), #compute the mean size
se = sd(mathsAdvantage, na.rm = TRUE)/sqrt(reps)) #compute the standard error
# Use this chunk to complete Exercise 12
#summary statistics
maths %>% #the data to use
group_by(degree) %>% #group data by colour
summarise(reps = sum(!is.na(mathsAdvantage)), #compute the sample size
mean = mean(mathsAdvantage, na.rm = TRUE), #compute the mean size
se = sd(mathsAdvantage, na.rm = TRUE)/sqrt(reps)) #compute the standard error
# Use this chunk to complete Exercise 13
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
#call the ANOVA table
Anova(maths.mod, type = 2)
var.test(mathsAdvantage ~ degree, #specifies the model formula
data = maths) #specifies the data to use
# Use this chunk to complete Exercise 13
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
#call the ANOVA table
Anova(maths.mod, type = 2)
#SS_groups/(SS_groups + SS_residuals)
3729/(3729  + 60503)
summary(maths.mod)
#SS_groups/(SS_groups + SS_residuals)
3729/(3729  + 60503)
# Use this chunk to complete Exercise 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
# Use this chunk to complete Exercise 13
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
#call the ANOVA table
Anova(maths.mod, type = 2)
#SS_groups/(SS_groups + SS_residuals)
summary(maths.mod)
# Use this chunk to complete Exercise 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# Use this chunk to complete Exercise 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
# Use this chunk to complete Exercise 12
#summary statistics
maths %>% #the data to use
group_by(degree) %>% #group data by colour
summarise(reps = sum(!is.na(mathsAdvantage)), #compute the sample size
mean = mean(mathsAdvantage, na.rm = TRUE), #compute the mean size
se = sd(mathsAdvantage, na.rm = TRUE)/sqrt(reps)) #compute the standard error
# Use this chunk to complete Exercise 13
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
#call the ANOVA table
Anova(maths.mod, type = 2)
# Use this chunk to complete Exercise 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
# Use this chunk to complete Exercise 12
#summary statistics
maths %>% #the data to use
group_by(degree) %>% #group data by colour
summarise(reps = sum(!is.na(mathsAdvantage)), #compute the sample size
mean = mean(mathsAdvantage, na.rm = TRUE), #compute the mean size
se = sd(mathsAdvantage, na.rm = TRUE)/sqrt(reps)) #compute the standard error
# Use this chunk to complete Exercise 13
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
#call the ANOVA table
Anova(maths.mod, type = 2)
# Use this chunk to complete Exercise 15
#SS_groups/(SS_groups + SS_residuals)
summary(maths.mod)
# Use this chunk to complete Exercise 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
# Use this chunk to complete Exercise 12
#summary statistics
maths %>% #the data to use
group_by(degree) %>% #group data by colour
summarise(reps = sum(!is.na(mathsAdvantage)), #compute the sample size
mean = mean(mathsAdvantage, na.rm = TRUE), #compute the mean size
se = sd(mathsAdvantage, na.rm = TRUE)/sqrt(reps)) #compute the standard error
# Use this chunk to complete Exercise 13
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
#call the ANOVA table
Anova(maths.mod, type = 2)
# Use this chunk to complete Exercise 15
#SS_groups/(SS_groups + SS_residuals)
summary(maths.mod)
# Use this chunk to complete Exercise 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
# Use this chunk to complete Exercise 12
#summary statistics
maths %>% #the data to use
group_by(degree) %>% #group data by colour
summarise(reps = sum(!is.na(mathsAdvantage)), #compute the sample size
mean = mean(mathsAdvantage, na.rm = TRUE), #compute the mean size
se = sd(mathsAdvantage, na.rm = TRUE)/sqrt(reps)) #compute the standard error
# Use this chunk to complete Exercise 13
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
#call the ANOVA table
Anova(maths.mod, type = 2)
# Use this chunk to complete Exercise 15
#SS_groups/(SS_groups + SS_residuals)
summary(maths.mod)
# Use this chunk to complete Exercise 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# Use this chunk to complete Exercise 12
#summary statistics
maths %>% #the data to use
group_by(degree) %>% #group data by colour
summarise(reps = sum(!is.na(mathsAdvantage)), #compute the sample size
mean = mean(mathsAdvantage, na.rm = TRUE), #compute the mean size
se = sd(mathsAdvantage, na.rm = TRUE)/sqrt(reps)) #compute the standard error
#SS_groups/(SS_groups + SS_residuals)
3983 / (3983 + 61764)
# Use this chunk to complete Exercise 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# DON'T CHANGE ANYTHING IN THIS CHUNK (include=false tells RStudio to run the code but exclude the chunk from HTML output)
# load required packages
library(tidyverse)
library(ggResidpanel)
library(car)
library(emmeans)
# Run this chunk to load the data for Problem set 1
flies <- read_csv("./flies.csv",
col_names = TRUE, na = "NA",
col_types = list(food = col_factor(),
eyeSpan = col_double()))
glimpse(flies, width = 75)
# Use this chunk to complete Exercises 13 and 14 (results here will also help you to answer Exercise 16)
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
# Use this chunk to complete Exercises 13 and 14 (results here will also help you to answer Exercise 16)
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
#call the ANOVA table
Anova(maths.mod, type = 2)
# Use this chunk to complete Exercises 15 and 16
#estimate marginal means for groups in 'temp' and save the output as 'means'
means <- emmeans(maths.mod, specs = "degree")
#do unplanned comparisons of groups in 'means', using Tukey's adjustment for multiple testing
pairs(means, adjust = "tukey")
# DON'T CHANGE ANYTHING IN THIS CHUNK (include=false tells RStudio to run the code but exclude the chunk from HTML output)
# load required packages
library(tidyverse)
library(ggResidpanel)
library(car)
library(emmeans)
# Run this chunk to load the data for Problem set 2
drivers <- read_csv("./drivers.csv",
col_names = TRUE, na = "NA",
col_types = list(infectionStatus = col_factor(),
accidentStatus = col_factor()))
glimpse(drivers, width = 75)
library(ggmosaic)
ggplot(data = drivers) +
geom_mosaic(aes(x = product(accidentStatus, infectionStatus), fill = accidentStatus)) +
labs(y="accidentStatus", x="infectionStatus") +
theme_bw() +
theme(legend.position="none")
ggpreview(scale = 1
, width = 9.5, height = 8
, units = "cm"
, limitsize = F)
ggpreview <- function(...) {
fname <- tempfile(fileext = ".png")
ggsave(filename = fname, ...)
system2("open", fname)
invisible(NULL)
}
ggpreview(scale = 1
, width = 9.5, height = 8
, units = "cm"
, limitsize = F)
ggplot(data = drivers) +
geom_mosaic(aes(x = product(accidentStatus, infectionStatus), fill = infectionStatus)) +
labs(y="accidentStatus", x="infectionStatus") +
theme_bw() +
theme(legend.position="none")
accident
#make the contingency table
contingency_table <- table(drivers$infectionStatus, drivers$accidentStatus) #make the table and name it 'contingency_table`
contingency_table #show the table
# DON'T CHANGE ANYTHING IN THIS CHUNK (include=false tells RStudio to run the code but exclude the chunk from HTML output)
# load required packages
library(tidyverse)
library(ggResidpanel)
library(car)
library(emmeans)
28/40
# DON'T CHANGE ANYTHING IN THIS CHUNK (include=false tells RStudio to run the code but exclude it from the output)
# load required packages
library(tidyverse)
library(ggmosaic)
library(ggResidpanel)
library(car)
library(emmeans)
# Run this chunk to load the data for Problem set 1
flies <- read_csv("./flies.csv",
col_names = TRUE, na = "NA",
col_types = list(food = col_factor(),
eyeSpan = col_double()))
glimpse(flies, width = 75)
#summary statistics
flies %>% #the data to use
group_by(food) %>% #group data by colour
summarise(reps = sum(!is.na(eyeSpan)), #compute the sample size
mean = mean(eyeSpan, na.rm = TRUE), #compute the mean size
se = sd(eyeSpan, na.rm = TRUE)/sqrt(reps)) #compute the standard error
# Run this chunk to load the data for Problem set 2
drivers <- read_csv("./drivers.csv",
col_names = TRUE, na = "NA",
col_types = list(infectionStatus = col_factor(),
accidentStatus = col_factor()))
glimpse(drivers, width = 75)
ggplot(data = drivers) +
geom_mosaic(aes(x = product(accidentStatus, infectionStatus), fill = accidentStatus)) +
labs(y="accidentStatus", x="infectionStatus") +
theme_bw() +
theme(legend.position="none")
Run this chunk to load the data for Problem set 2
ggplot(data = drivers) +
geom_mosaic(aes(x = product(accidentStatus, infectionStatus), fill = accidentStatus)) +
labs(y="accidentStatus", x="infectionStatus") +
theme_bw() +
theme(legend.position="none")
# Run this chunk to load the data for Problem set 2
drivers <- read_csv("./drivers.csv",
col_names = TRUE, na = "NA",
col_types = list(infectionStatus = col_factor(),
accidentStatus = col_factor()))
glimpse(drivers, width = 75)
ggplot(data = drivers) +
geom_mosaic(aes(x = product(accidentStatus, infectionStatus), fill = accidentStatus)) +
labs(y="accidentStatus", x="infectionStatus") +
theme_bw() +
theme(legend.position="none")
# Run this chunk to load the data for Problem set 2
drivers <- read_csv("./drivers.csv",
col_names = TRUE, na = "NA",
col_types = list(infectionStatus = col_factor(),
accidentStatus = col_factor()))
glimpse(drivers, width = 75)
ggplot(data = drivers) +
geom_mosaic(aes(x = product(accidentStatus, infectionStatus), fill = accidentStatus)) +
labs(y="accidentStatus", x="infectionStatus") +
theme_bw() +
theme(legend.position="none")
View(drivers)
# Run this chunk to load the data for Problem set 2
drivers <- read_csv("./drivers.csv",
col_names = TRUE, na = "NA",
col_types = list(infectionStatus = col_factor(),
accidentStatus = col_factor()))
ggplot(data = drivers) +
geom_mosaic(aes(x = product(accidentStatus, infectionStatus), fill = accidentStatus)) +
labs(y="accidentStatus", x="infectionStatus") +
theme_bw() +
theme(legend.position="none")
# Run this chunk to load the data for Problem set 2
drivers <- read_csv("./drivers.csv",
col_names = TRUE, na = "NA",
col_types = list(infectionStatus = col_factor(),
accidentStatus = col_factor()))
glimpse(drivers, width = 75)
ggplot(data = drivers) +
geom_mosaic(aes(x = product(infectionStatus), fill = accidentStatus)) +
labs(y="accidentStatus", x="infectionStatus") +
theme_bw() +
theme(legend.position="none")
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
#fit the ANOVA model
maths.mod <- #saves the model
lm(mathsAdvantage ~ degree, #specifies the model formula
data = maths, #specifies the data to use
contrasts = list(degree = "contr.sum")) #specifies sum-to-zero contrasts
#check model assumptions
resid_panel(maths.mod, plots = c("resid", "qq"))
# Run this chunk to load the data for Problem set 2
primates <- read_csv("./primates.csv",
col_names = TRUE, na = "NA",
col_types = list(species = col_factor(),
mass = col_double(),
metabolic_rate = col_double()))
#ln-transform variables (DELETED FOR STUDENTS)
#they will need to ln-transform both variables, and there are no 0s in either variable so no constant is needed (they are told this below)
primates <- primates %>%
mutate(lnmass = log(mass),
lnmetabolic_rate = log(metabolic_rate))
glimpse(primates, width = 75)
# DON'T CHANGE ANYTHING IN THIS CHUNK (include=false tells RStudio to run the code but exclude it from the output)
# load required packages
library(tidyverse)
library(ggmosaic)
library(ggResidpanel)
library(car)
library(emmeans)
# Run this chunk to load the data for Problem set 3
primates <- read_csv("./primates.csv",
col_names = TRUE, na = "NA",
col_types = list(species = col_factor(),
mass = col_double(),
metabolic_rate = col_double()))
glimpse(primates, width = 75)
# Run this chunk to load the data for Problem set 3
primates <- read_csv("./primates.csv",
col_names = TRUE, na = "NA",
col_types = list(species = col_factor(),
mass = col_double(),
metabolic_rate = col_double()))
glimpse(primates, width = 75)
primates
# DON'T CHANGE ANYTHING IN THIS CHUNK (include=false tells RStudio to run the code but exclude it from the output)
# load required packages
library(tidyverse)
library(ggmosaic)
library(ggResidpanel)
library(car)
library(emmeans)
# Run this chunk to load the data for Problem set 1
flies <- read_csv("./flies.csv",
col_names = TRUE, na = "NA",
col_types = list(food = col_factor(),
eyeSpan = col_double()))
glimpse(flies, width = 75)
# Use this chunk to complete Exercise 2
flies %>%
group_by(food) %>%
summarise(mean = mean(eyeSpan),
n = n(),
sd = sd(eyeSpan, na.rm = TRUE),
se = sd/sqrt(n))
# Use this chunk to complete Exercises 3, 4, and 5
t.test(eyeSpan ~ food,
data = flies,
alternative = "two.sided",
var.equal =)
# Run this chunk to load the data for Problem set 2
drivers <- read_csv("./drivers.csv",
col_names = TRUE, na = "NA",
col_types = list(infectionStatus = col_factor(),
accidentStatus = col_factor()))
glimpse(drivers, width = 75)
# Use this chunk to complete Exercises 8, 9, and 10
table <- table(drivers$infectionStatus, drivers$accidentStatus)
table
chisq.test(x = table, correct = FALSE)
# Run this chunk to load the data for Problem set 3
maths <- read_csv("./maths.csv",
col_names = TRUE, na = "NA",
col_types = list(degree = col_factor(),
mathsAdvantage = col_double()))
glimpse(maths, width = 75)
# Use this chunk to complete Exercise 12
maths %>%
group_by(degree) %>%
summarise(mean = mean(mathsAdvantage),
n = n(),
sd = sd(mathsAdvantage),
SE = sd/sqrt(n))
# Use this chunk to complete Exercises 13 and 14 (results here will also help you to answer Exercise 16)
maths.mod <- lm(mathsAdvantage ~ degree,
data = maths,
contrasts = list(degree = "contr.sum"))
maths.mod
resid_panel(maths.mod, plots = c("resid", "qq"))
Anova(maths.mod)
# Use this chunk to complete Exercises 15 and 16
means <- emmeans(maths.mod, specs = "degree")
pairs(means, adjust = "tukey")
# Run this chunk to load the data for Problem set 3
primates <- read_csv("./primates.csv",
col_names = TRUE, na = "NA",
col_types = list(species = col_factor(),
mass = col_double(),
metabolic_rate = col_double()))
glimpse(primates, width = 75)
primates
# Use this chunk to complete Exercise 19
primates.mod <- lm(metabolic_rate ~ mass,
data = primates)
primates.mod
resid_panel(primates.mod, plots = c("resid", "qq"))
# Use this chunk to complete Exercise 20
primates.trans <- primates %>%
mutate(metabolic_rate_ln = log(metabolic_rate),
mass_ln = log(mass))
primates.mod2 <- lm(metabolic_rate_ln ~ mass_ln,
data = primates.trans)
primates.mod2
resid_panel(primates.mod2, plots = c("resid", "qq"))
summary(primates.mod2)
# Use this chunk to complete Exercise 23
